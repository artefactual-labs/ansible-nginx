#!/usr/bin/env bash

# Variables
DB_DIR="/etc/nginx/geoip"  # Directory to store the GeoLite2 databases
LOG_FILE="/var/log/geoip-update.log"

# URLs for GeoIP database downloads
ASN_URL="https://hub-data.crowdsec.net/mmdb_update/GeoLite2-ASN.mmdb"
CITY_URL="https://hub-data.crowdsec.net/mmdb_update/GeoLite2-City.mmdb"

# Target file paths for downloaded databases
ASN_DB="$DB_DIR/GeoLite2-ASN.mmdb"
CITY_DB="$DB_DIR/GeoLite2-City.mmdb"

# Ensure the directory exists
mkdir -p "$DB_DIR"

# Download databases from CrowdSec
download_file() {
    local url="$1"
    local output_file="$2"

    # Use curl to download and check success
    if curl -sfL "$url" -o "${output_file}.tmp"; then
        if [[ -s "${output_file}.tmp" ]]; then
            mv "${output_file}.tmp" "$output_file"
            echo "$(date): Successfully updated $output_file" >> "$LOG_FILE"
        else
            echo "$(date): Failed - $output_file.tmp is empty. Skipping update for $output_file." >> "$LOG_FILE"
            rm -f "${output_file}.tmp"
        fi
    else
        echo "$(date): Failed to download $url" >> "$LOG_FILE"
        rm -f "${output_file}.tmp"  # Cleanup temporary file
    fi
}

# Download GeoLite2-ASN database
download_file "$ASN_URL" "$ASN_DB"

# Download GeoLite2-City database
download_file "$CITY_URL" "$CITY_DB"

# Update log file
if [[ -f "$ASN_DB" && -f "$CITY_DB" ]]; then
    echo "$(date): NGINX reloaded successfully" >> "$LOG_FILE"
else
    echo "$(date): NGINX reload skipped due to missing database files" >> "$LOG_FILE"
fi

