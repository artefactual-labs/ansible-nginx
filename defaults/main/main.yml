---
nginx_user: "{% if ansible_os_family in ['RedHat', 'Rocky'] %}nginx{% elif ansible_os_family == 'Debian' %}www-data{% endif %}"
nginx_group: "{{ nginx_user }}"

nginx_worker_processes: "{{ ansible_processor_vcpus }}"
nginx_max_clients: 512
nginx_worker_rlimit_nofile: 1024
nginx_log_dir: "/var/log/nginx"

nginx_http_params:
  - sendfile "on"
  - tcp_nopush "on"
  - tcp_nodelay "on"
  - keepalive_timeout "65"
  - access_log "{{ nginx_log_dir }}/access.log"
  - error_log "{{ nginx_log_dir }}/error.log"
  - server_tokens off
  - types_hash_max_size 2048

nginx_sites:
  default:
     - listen 80
     - server_name _
     - root "/usr/share/nginx/html"
     - index index.html

# default-deny        
# to catch unhandled vhosts
nginx_use_default_deny: False

default_deny_sites:
  default_deny:
     - listen 80 default_server
     - listen [::]:80 default_server
     - listen 443 ssl http2 default_server
     - listen [::]:443 ssl http2 default_server
     - server_name _
     - ssl_protocols TLSv1.2 TLSv1.3
     - ssl_ciphers 'ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305'
     - ssl_session_tickets off
     - ssl_certificate /etc/nginx/ssl-certs/default_deny.crt
     - ssl_certificate_key /etc/nginx/ssl-certs/default_deny.pem
     - return 444
     - access_log off
     - error_log /dev/null  
crypto_package: >-
  {%- if ansible_distribution == "Rocky" and ansible_distribution_major_version == "8" 
      or ansible_distribution == "Ubuntu" and ansible_distribution_version is version_compare('20.04', '>=') -%}
    python3-cryptography
  {%- else -%}
    python-cryptography
  {%- endif -%}

nginx_configs: {}

nginx_auth_basic_files: {}

install_rpm_repositories: "true"

#
# Bots and request-limit related variables
# See README.md file
#

nginx_use_global_robots_txt: False
nginx_use_bots_deny_list: False
nginx_use_bots_request_limit: False
nginx_use_default_request_limit: False

nginx_bots_deny_list_status: 403

nginx_bots_request_limit_rate: "1r/m"
nginx_bots_request_limit_burst: 2
nginx_bots_request_limit_nodelay: "yes"
nginx_bots_request_limit_shared_memory_zone: "10m"
nginx_bots_request_limit_use_x_forwarded_for: False

nginx_default_request_limit_rate: "100r/s"
nginx_default_request_limit_burst: 100
nginx_default_request_limit_nodelay: "yes"
nginx_default_request_limit_shared_memory_zone: "50m"
nginx_default_request_limit_use_x_forwarded_for: False

nginx_request_limit_status: 429

#The following lists have been defined in bot-lists.yml file:
# nginx_bots_request_limit_user_agents_regex
# nginx_global_robots_txt
# nginx_bots_deny_list


nginx_use_high_rate_request_limit: False
nginx_high_rate_request_limit_rate: "1000r/s"
nginx_high_rate_request_limit_burst: 200
nginx_high_rate_request_limit_shared_memory_zone: "50m"

nginx_high_rate_request_limit_asn_list: []
#  - 13335 # Cloudflare 

nginx_high_rate_request_limit_net_list: []
#  - 10.0.0.0/8
#  - 1.2.0.0/16
#  - 1.2.3.4

#Note nginx_use_geoip_request_limit requires nginx_use_bots_request_limit=True
#It only can be used in frontend servers because under a proxy it is going to take geoip from proxy
nginx_use_geoip_request_limit: False
nginx_geoip_request_limit_rate: "1r/m"
nginx_geoip_request_limit_rate_shared_memory_zone: "10m"
nginx_geoip_request_limit_burst: 1

#The following list have been defined in geoip-lists.yml files:
# nginx_geoip_country_list
# nginx_geoip_asn_list

#rate limits exceptions
#They are useful when having several sites in server and you want to add exceptions based on FQDN

nginx_high_rate_request_limit_asn_host_exception_list: []
#  - id: "example.com"
#    exceptions:
#      - host: "main.example.com"
#        asn: "1234"
#        enable: True  # enable=true means: Apply high_rate limit to the asn
#      - host: "secondary.example.com"
#        asn: "456"
#        enable: False # enable=false means: Don't apply high_rate limit to the asn
#  - id: "example2.com"
#    exceptions:
#      - host: "main.example2.com"
#        asn: "1234"
#        enable: False # enable=false means: Don't apply high_rate limit to the asn
#      - host: "secondary.example2.com"
#        asn: "456"
#        enable: True  # enable=true means: Apply high_rate limit to the asn

nginx_geoip_request_limit_country_host_exception_list: []
#  - id: "example.com"
#    exceptions:
#      - host: "main.example.com" 
#        country: "CN"
#        enable: True  # enable=true means: Apply geoip rate limit to the country
#      - host: "secondary.example.com"
#        country: "ES"
#        enable: False # enable=false means: Don't apply geoip rate limit to the country
#  - id: "example2.com"
#    exceptions:
#      - host: "main.example2.com"
#        country: "CN"
#        enable: False # enable=false means: Don't apply geoip rate limit to the country
#      - host: "secondary.example2.com"
#        country: "ES"
#        enable: True  # enable=true means: Apply geoip rate limit to the country

nginx_geoip_request_limit_asn_host_exception_list: []
#  - id: "example.com"
#    exceptions:
#      - host: "main.example.com"
#        asn: "1234"
#        enable: True  # enable=true means: Apply geoip rate limit to the asn
#      - host: "secondary.example.com"
#        asn: "5678"
#        enable: False # enable=false means: Don't apply geoip rate limit to the asn
#  - id: "example2.com"
#    exceptions:
#      - host: "main.example2.com"
#        asn: "1111"
#        enable: False # enable=false means: Don't apply geoip rate limit to the asn
#      - host: "secondary.example2.com"
#        asn: "2222"
#        enable: True # enable=true means: Apply geoip rate limit to the asn

nginx_bots_request_limit_user_agent_host_exception_list: []
#  - id: "example.com"
#    exceptions:
#      - host: "main.example.com"        # If host="": it applies to all sites
#        user_agent: "GoogleBot"
#        enable: True   # enable=true means: Apply the bots rate limit to the User-Agent
#      - host: "secondary.example.com"   # If host="": it applies to all sites
#        user_agent: "GoogleOther"
#        enable: False  # enable=false means: Don't apply the bots rate limit to the User-Agent
#  - id: "example2.com"
#    exceptions:
#      - host: "main.example2.com"       # If host="": it applies to all sites
#        user_agent: "GoogleBot"
#        enable: False  # enable=false means: Don't apply the bots rate limit to the User-Agent
#      - host: "secondary.example2.com"  # If host="": it applies to all sites
#        user_agent: "GoogleOther"
#        enable: True   # enable=true means: Apply the bots rate limit to the User-Agent

